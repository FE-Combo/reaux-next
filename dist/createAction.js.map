{"version":3,"file":"createAction.js","sourceRoot":"","sources":["../framework/createAction.ts"],"names":[],"mappings":"AAcA;;;GAGG;AACH,MAAM,UAAU,YAAY,CAC1B,OAAU;IAEV,MAAM,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;IACtC,MAAM,IAAI,GAAG,+BAA+B,CAAC,OAAO,CAAC,CAAC;IACtD,MAAM,OAAO,GAAG,EAAuB,CAAC;IACxC,MAAM,cAAc,GAAG,EAAoB,CAAC;IAC5C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;QACxB,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;QACnC,MAAM,mBAAmB,GAAG,GAAG,UAAU,IAAI,UAAU,EAAE,CAAC;QAC1D,OAAO,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,OAAc,EAAE,EAAE,CAAC,CAAC;YAC5C,IAAI,EAAE,mBAAmB;YACzB,OAAO;SACR,CAAC,CAAC;QACH,cAAc,CAAC,mBAAmB,CAAC,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IAC7D,CAAC,CAAC,CAAC;IAEH,OAAO,EAAE,OAAO,EAAE,cAAc,EAAE,CAAC;AACrC,CAAC;AAED,SAAS,+BAA+B,CAAC,MAAc;IACrD,OAAO,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CACrE,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,aAAa,CAC7B,CAAC;AACJ,CAAC","sourcesContent":["import { ActionType } from \"./type\";\n\ntype ActionCreators<H> = {\n  readonly [K in {\n    [K in keyof H]: H[K] extends (...args: any[]) => any ? K : never;\n  }[keyof H]]: H[K] extends (...args: infer P) => any\n    ? ((...args: P) => ActionType<P>)\n    : never;\n};\n\ninterface ActionHandlers {\n  [key: string]: (...args: any[]) => any;\n}\n\n/**\n * According handler propertyNames generate actions and actionHandlers\n * @param handler Module reference. e.g: const handler = new Module(\"name\",{})\n */\nexport function createAction<H extends object & { moduleName: string }>(\n  handler: H\n) {\n  const moduleName = handler.moduleName;\n  const keys = getPrototypeOfExceptConstructor(handler);\n  const actions = {} as ActionCreators<H>;\n  const actionHandlers = {} as ActionHandlers;\n  keys.forEach(actionType => {\n    const method = handler[actionType];\n    const qualifiedActionType = `${moduleName}/${actionType}`;\n    actions[actionType] = (...payload: any[]) => ({\n      type: qualifiedActionType,\n      payload\n    });\n    actionHandlers[qualifiedActionType] = method.bind(handler);\n  });\n\n  return { actions, actionHandlers };\n}\n\nfunction getPrototypeOfExceptConstructor(object: object): string[] {\n  return Object.getOwnPropertyNames(Object.getPrototypeOf(object)).filter(\n    key => key !== \"constructor\"\n  );\n}\n"]}